
name: iodict release

on:
  release:
    types:
      - created

jobs:
  pypi_push_and_publish:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Build the python package
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade twine build wheel setuptools
        python3 -m build --no-isolation
    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/iodict*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_rpms:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Create source tarball
      run: |
        name=${PWD##*/}
        cd ..
        tar -czf /tmp/iodict.tar.gz "${name}"
        mv /tmp/iodict.tar.gz ${{ github.workspace }}/contrib/container-build/
    - name: Build builder container image
      run: docker build -t iodict-builder -f ./contrib/container-build/Containerfile ./contrib/container-build
    - name: Run builder container
      run: |
        export RELEASE_VERSION=$(awk -F'"' '/version/ {print $2}' ${{ github.workspace }}/iodict/meta.py)
        docker run --env RELEASE_VERSION="${RELEASE_VERSION}" --net=host -v ${{ github.workspace }}/contrib:/home/builder/rpm iodict-builder
    - name: Upload build Log artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: build-logs-el8
        path: contrib/build/*.log
    - name: Upload RPM artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: contrib/build/*.rpm
        fail_on_unmatched_files: true
    - name: Create rpm tarball
      run: |
        cd ${{ github.workspace }}/contrib/build
        tar -czf /tmp/rpm-bundle.tar.gz *.rpm
    - name: Upload RPM bundle
      uses: softprops/action-gh-release@v1
      with:
        files: /tmp/rpm-bundle.tar.gz
        fail_on_unmatched_files: true
